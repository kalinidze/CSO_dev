<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:owl="http://www.w3.org/2002/07/owl#"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
  xml:base="http://example.org/onto/">
  <owl:Class rdf:about="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment">
    <rdfs:label>google_vertex_ai_endpoint_with_model_garden_deployment</rdfs:label>
    <rdfs:comment>#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This code is generated by Magic Modules using the following:
#
#     Configuration: https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/vertexai/EndpointWithModelGardenDeployment.yaml
#     Template:      https:#github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/terraform/resource.html.markdown.tmpl
#
#     DO NOT EDIT this file directly. Any changes made to this file will be
#     overwritten during the next generation cycle.
#
# ----------------------------------------------------------------------------
subcategory: "Vertex AI"
description: |-
  Create an Endpoint and deploy a Model Garden model to it.
---</rdfs:comment>
  </owl:Class>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_deployed_model_display_name">
    <rdfs:label>deployed_model_display_name</rdfs:label>
    <rdfs:comment>Output only. The display name assigned to the model deployed to the endpoint.
This is not required to delete the resource but is used for debug logging.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_deployed_model_id">
    <rdfs:label>deployed_model_id</rdfs:label>
    <rdfs:comment>Output only. The unique numeric ID that Vertex AI assigns to the model at the time it is deployed to the endpoint.
It is required to undeploy the model from the endpoint during resource deletion as described in
https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints/undeployModel.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_endpoint">
    <rdfs:label>endpoint</rdfs:label>
    <rdfs:comment>Resource ID segment making up resource 'endpoint'. It identifies the resource within its parent collection as described in https://google.aip.dev/122.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_hugging_face_model_id">
    <rdfs:label>hugging_face_model_id</rdfs:label>
    <rdfs:comment>The Hugging Face model to deploy.
Format: Hugging Face model ID like 'google/gemma-2-2b-it'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_id">
    <rdfs:label>id</rdfs:label>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_location">
    <rdfs:label>location</rdfs:label>
    <rdfs:comment>Resource ID segment making up resource 'location'. It identifies the resource within its parent collection as described in https://google.aip.dev/122.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_project">
    <rdfs:label>project</rdfs:label>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_publisher_model_name">
    <rdfs:label>publisher_model_name</rdfs:label>
    <rdfs:comment>The Model Garden model to deploy.
Format:
'publishers/{publisher}/models/{publisher_model}@{version_id}', or
'publishers/hf-{hugging-face-author}/models/{hugging-face-model-name}@001'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_fast_tryout_enabled">
    <rdfs:label>fast_tryout_enabled</rdfs:label>
    <rdfs:comment>If true, enable the QMT fast tryout feature for this model if possible.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_system_labels">
    <rdfs:label>system_labels</rdfs:label>
    <rdfs:comment>System labels for Model Garden deployments.
These labels are managed by Google and for tracking purposes only.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_max_replica_count">
    <rdfs:label>max_replica_count</rdfs:label>
    <rdfs:comment>The maximum number of replicas that may be deployed on when the traffic
against it increases. If the requested value is too large, the deployment
will error, but if deployment succeeds then the ability to scale to that
many replicas is guaranteed (barring service outages). If traffic increases
beyond what its replicas at maximum may handle, a portion of the traffic
will be dropped. If this value is not provided, will use
min_replica_count as the default value.

The value of this field impacts the charge against Vertex CPU and GPU
quotas. Specifically, you will be charged for (max_replica_count *
number of cores in the selected machine type) and (max_replica_count *
number of GPUs per replica in the selected machine type).</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_min_replica_count">
    <rdfs:label>min_replica_count</rdfs:label>
    <rdfs:comment>The minimum number of machine replicas that will be always deployed on.
This value must be greater than or equal to 1.

If traffic increases, it may dynamically be deployed onto more replicas,
and as traffic decreases, some of these extra replicas may be freed.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_required_replica_count">
    <rdfs:label>required_replica_count</rdfs:label>
    <rdfs:comment>Number of required available replicas for the deployment to succeed.
This field is only needed when partial deployment/mutation is
desired. If set, the deploy/mutate operation will succeed once
available_replica_count reaches required_replica_count, and the rest of
the replicas will be retried. If not set, the default
required_replica_count will be min_replica_count.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_spot">
    <rdfs:label>spot</rdfs:label>
    <rdfs:comment>If true, schedule the deployment workload on [spot
VMs](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms).</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_metric_name">
    <rdfs:label>metric_name</rdfs:label>
    <rdfs:comment>The resource metric name.
Supported metrics:

* For Online Prediction:
* 'aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle'
* 'aiplatform.googleapis.com/prediction/online/cpu/utilization'</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_target">
    <rdfs:label>target</rdfs:label>
    <rdfs:comment>The target resource utilization in percentage (1% - 100%) for the given
metric; once the real usage deviates from the target by a certain
percentage, the machine replicas change. The default value is 60
(representing 60%) if not provided.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_accelerator_count">
    <rdfs:label>accelerator_count</rdfs:label>
    <rdfs:comment>The number of accelerators to attach to the machine.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_accelerator_type">
    <rdfs:label>accelerator_type</rdfs:label>
    <rdfs:comment>Possible values:
ACCELERATOR_TYPE_UNSPECIFIED
NVIDIA_TESLA_K80
NVIDIA_TESLA_P100
NVIDIA_TESLA_V100
NVIDIA_TESLA_P4
NVIDIA_TESLA_T4
NVIDIA_TESLA_A100
NVIDIA_A100_80GB
NVIDIA_L4
NVIDIA_H100_80GB
NVIDIA_H100_MEGA_80GB
NVIDIA_H200_141GB
NVIDIA_B200
TPU_V2
TPU_V3
TPU_V4_POD
TPU_V5_LITEPOD</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_machine_type">
    <rdfs:label>machine_type</rdfs:label>
    <rdfs:comment>The type of the machine.

See the [list of machine types supported for
prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types)

See the [list of machine types supported for custom
training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types).

For DeployedModel this field is optional, and the default
value is 'n1-standard-2'. For BatchPredictionJob or as part of
WorkerPoolSpec this field is required.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_multihost_gpu_node_count">
    <rdfs:label>multihost_gpu_node_count</rdfs:label>
    <rdfs:comment>The number of nodes per replica for multihost GPU deployments.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_tpu_topology">
    <rdfs:label>tpu_topology</rdfs:label>
    <rdfs:comment>The topology of the TPUs. Corresponds to the TPU topologies available from
GKE. (Example: tpu_topology: "2x2x1").</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_key">
    <rdfs:label>key</rdfs:label>
    <rdfs:comment>Corresponds to the label key of a reservation resource. To target a
SPECIFIC_RESERVATION by name, use 'compute.googleapis.com/reservation-name'
as the key and specify the name of your reservation as its value.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_reservation_affinity_type">
    <rdfs:label>reservation_affinity_type</rdfs:label>
    <rdfs:comment>Specifies the reservation affinity type.
Possible values:
TYPE_UNSPECIFIED
NO_RESERVATION
ANY_RESERVATION
SPECIFIC_RESERVATION</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_values">
    <rdfs:label>values</rdfs:label>
    <rdfs:comment>Corresponds to the label values of a reservation resource. This must be the
full resource name of the reservation or reservation block.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_dedicated_endpoint_enabled">
    <rdfs:label>dedicated_endpoint_enabled</rdfs:label>
    <rdfs:comment>If true, the endpoint will be exposed through a dedicated
DNS [Endpoint.dedicated_endpoint_dns]. Your request to the dedicated DNS
will be isolated from other users' traffic and will have better
performance and reliability. Note: Once you enabled dedicated endpoint,
you won't be able to send request to the shared DNS
{region}-aiplatform.googleapis.com. The limitations will be removed soon.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_endpoint_display_name">
    <rdfs:label>endpoint_display_name</rdfs:label>
    <rdfs:comment>The user-specified display name of the endpoint. If not set, a
default name will be used.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_enable_private_service_connect">
    <rdfs:label>enable_private_service_connect</rdfs:label>
    <rdfs:comment>Required. If true, expose the IndexEndpoint via private service connect.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_project_allowlist">
    <rdfs:label>project_allowlist</rdfs:label>
    <rdfs:comment>A list of Projects from which the forwarding rule will target the service attachment.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_service_attachment">
    <rdfs:label>service_attachment</rdfs:label>
    <rdfs:comment>Output only. The name of the generated service attachment resource.
This is only populated if the endpoint is deployed with PrivateServiceConnect.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_error_message">
    <rdfs:label>error_message</rdfs:label>
    <rdfs:comment>Output only. Error message if the PSC service automation failed.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_forwarding_rule">
    <rdfs:label>forwarding_rule</rdfs:label>
    <rdfs:comment>Output only. Forwarding rule created by the PSC service automation.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_ip_address">
    <rdfs:label>ip_address</rdfs:label>
    <rdfs:comment>Output only. IP address rule created by the PSC service automation.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_network">
    <rdfs:label>network</rdfs:label>
    <rdfs:comment>Required. The full name of the Google Compute Engine network.
Format: projects/{project}/global/networks/{network}.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_project_id">
    <rdfs:label>project_id</rdfs:label>
    <rdfs:comment>Required. Project id used to create forwarding rule.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_state">
    <rdfs:label>state</rdfs:label>
    <rdfs:comment>Output only. The state of the PSC service automation.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_accept_eula">
    <rdfs:label>accept_eula</rdfs:label>
    <rdfs:comment>Whether the user accepts the End User License Agreement (EULA)
for the model.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_hugging_face_access_token">
    <rdfs:label>hugging_face_access_token</rdfs:label>
    <rdfs:comment>The Hugging Face read access token used to access the model
artifacts of gated models.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_hugging_face_cache_enabled">
    <rdfs:label>hugging_face_cache_enabled</rdfs:label>
    <rdfs:comment>If true, the model will deploy with a cached version instead of directly
downloading the model artifacts from Hugging Face. This is suitable for
VPC-SC users with limited internet access.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_model_display_name">
    <rdfs:label>model_display_name</rdfs:label>
    <rdfs:comment>The user-specified display name of the uploaded model. If not
set, a default name will be used.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_args">
    <rdfs:label>args</rdfs:label>
    <rdfs:comment>Specifies arguments for the command that runs when the container starts.
This overrides the container's
['CMD'](https://docs.docker.com/engine/reference/builder/#cmd). Specify
this field as an array of executable and arguments, similar to a Docker
'CMD''s "default parameters" form.

If you don't specify this field but do specify the
command field, then the command from the
'command' field runs without any additional arguments. See the
[Kubernetes documentation about how the
'command' and 'args' fields interact with a container's 'ENTRYPOINT' and
'CMD'](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).

If you don't specify this field and don't specify the 'command' field,
then the container's
['ENTRYPOINT'](https://docs.docker.com/engine/reference/builder/#cmd) and
'CMD' determine what runs based on their default behavior. See the Docker
documentation about [how 'CMD' and 'ENTRYPOINT'
interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).

In this field, you can reference [environment variables
set by Vertex
AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
and environment variables set in the env field.
You cannot reference environment variables set in the Docker image. In
order for environment variables to be expanded, reference them by using the
following syntax:$(VARIABLE_NAME)
Note that this differs from Bash variable expansion, which does not use
parentheses. If a variable cannot be resolved, the reference in the input
string is used unchanged. To avoid variable expansion, you can escape this
syntax with '$$'; for example:$$(VARIABLE_NAME)
This field corresponds to the 'args' field of the Kubernetes Containers
[v1 core
API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_command">
    <rdfs:label>command</rdfs:label>
    <rdfs:comment>Specifies the command that runs when the container starts. This overrides
the container's
[ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint).
Specify this field as an array of executable and arguments, similar to a
Docker 'ENTRYPOINT''s "exec" form, not its "shell" form.

If you do not specify this field, then the container's 'ENTRYPOINT' runs,
in conjunction with the args field or the
container's ['CMD'](https://docs.docker.com/engine/reference/builder/#cmd),
if either exists. If this field is not specified and the container does not
have an 'ENTRYPOINT', then refer to the Docker documentation about [how
'CMD' and 'ENTRYPOINT'
interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).

If you specify this field, then you can also specify the 'args' field to
provide additional arguments for this command. However, if you specify this
field, then the container's 'CMD' is ignored. See the
[Kubernetes documentation about how the
'command' and 'args' fields interact with a container's 'ENTRYPOINT' and
'CMD'](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).

In this field, you can reference [environment variables set by Vertex
AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
and environment variables set in the env field.
You cannot reference environment variables set in the Docker image. In
order for environment variables to be expanded, reference them by using the
following syntax:$(VARIABLE_NAME)
Note that this differs from Bash variable expansion, which does not use
parentheses. If a variable cannot be resolved, the reference in the input
string is used unchanged. To avoid variable expansion, you can escape this
syntax with '$$'; for example:$$(VARIABLE_NAME)
This field corresponds to the 'command' field of the Kubernetes Containers
[v1 core
API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_deployment_timeout">
    <rdfs:label>deployment_timeout</rdfs:label>
    <rdfs:comment>Deployment timeout.
Limit for deployment timeout is 2 hours.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_health_route">
    <rdfs:label>health_route</rdfs:label>
    <rdfs:comment>HTTP path on the container to send health checks to. Vertex AI
intermittently sends GET requests to this path on the container's IP
address and port to check that the container is healthy. Read more about
[health
checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health).

For example, if you set this field to '/bar', then Vertex AI
intermittently sends a GET request to the '/bar' path on the port of your
container specified by the first value of this 'ModelContainerSpec''s
ports field.

If you don't specify this field, it defaults to the following value when
you deploy this Model to an Endpoint:/v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict
The placeholders in this value are replaced as follows:

* ENDPOINT: The last segment (following 'endpoints/')of the
Endpoint.name][] field of the Endpoint where this Model has been
deployed. (Vertex AI makes this value available to your container code
as the ['AIP_ENDPOINT_ID' environment
variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)

* DEPLOYED_MODEL: DeployedModel.id of the 'DeployedModel'.
(Vertex AI makes this value available to your container code as the
['AIP_DEPLOYED_MODEL_ID' environment
variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_image_uri">
    <rdfs:label>image_uri</rdfs:label>
    <rdfs:comment>URI of the Docker image to be used as the custom container for serving
predictions. This URI must identify an image in Artifact Registry or
Container Registry. Learn more about the [container publishing
requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing),
including permissions requirements for the Vertex AI Service Agent.

The container image is ingested upon ModelService.UploadModel, stored
internally, and this original path is afterwards not used.

To learn about the requirements for the Docker image itself, see
[Custom container
requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#).

You can use the URI to one of Vertex AI's [pre-built container images for
prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers)
in this field.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_predict_route">
    <rdfs:label>predict_route</rdfs:label>
    <rdfs:comment>HTTP path on the container to send prediction requests to. Vertex AI
forwards requests sent using
projects.locations.endpoints.predict to this
path on the container's IP address and port. Vertex AI then returns the
container's response in the API response.

For example, if you set this field to '/foo', then when Vertex AI
receives a prediction request, it forwards the request body in a POST
request to the '/foo' path on the port of your container specified by the
first value of this 'ModelContainerSpec''s
ports field.

If you don't specify this field, it defaults to the following value when
you deploy this Model to an Endpoint:/v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict
The placeholders in this value are replaced as follows:

* ENDPOINT: The last segment (following 'endpoints/')of the
Endpoint.name][] field of the Endpoint where this Model has been
deployed. (Vertex AI makes this value available to your container code
as the ['AIP_ENDPOINT_ID' environment
variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)

* DEPLOYED_MODEL: DeployedModel.id of the 'DeployedModel'.
(Vertex AI makes this value available to your container code
as the ['AIP_DEPLOYED_MODEL_ID' environment
variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_shared_memory_size_mb">
    <rdfs:label>shared_memory_size_mb</rdfs:label>
    <rdfs:comment>The amount of the VM memory to reserve as the shared memory for the model
in megabytes.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_name">
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Name of the environment variable. Must be a valid C identifier.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_value">
    <rdfs:label>value</rdfs:label>
    <rdfs:comment>Variables that reference a $(VAR_NAME) are expanded
using the previous defined environment variables in the container and
any service environment variables. If a variable cannot be resolved,
the reference in the input string will be unchanged. The $(VAR_NAME)
syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
references will never be expanded, regardless of whether the variable
exists or not.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_container_port">
    <rdfs:label>container_port</rdfs:label>
    <rdfs:comment>The number of the port to expose on the pod's IP address.
Must be a valid port number, between 1 and 65535 inclusive.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_failure_threshold">
    <rdfs:label>failure_threshold</rdfs:label>
    <rdfs:comment>Number of consecutive failures before the probe is considered failed.
Defaults to 3. Minimum value is 1.

Maps to Kubernetes probe argument 'failureThreshold'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_initial_delay_seconds">
    <rdfs:label>initial_delay_seconds</rdfs:label>
    <rdfs:comment>Number of seconds to wait before starting the probe. Defaults to 0.
Minimum value is 0.

Maps to Kubernetes probe argument 'initialDelaySeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_period_seconds">
    <rdfs:label>period_seconds</rdfs:label>
    <rdfs:comment>How often (in seconds) to perform the probe. Default to 10 seconds.
Minimum value is 1. Must be less than timeout_seconds.

Maps to Kubernetes probe argument 'periodSeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_success_threshold">
    <rdfs:label>success_threshold</rdfs:label>
    <rdfs:comment>Number of consecutive successes before the probe is considered successful.
Defaults to 1. Minimum value is 1.

Maps to Kubernetes probe argument 'successThreshold'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_timeout_seconds">
    <rdfs:label>timeout_seconds</rdfs:label>
    <rdfs:comment>Number of seconds after which the probe times out. Defaults to 1 second.
Minimum value is 1. Must be greater or equal to period_seconds.

Maps to Kubernetes probe argument 'timeoutSeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_command">
    <rdfs:label>command</rdfs:label>
    <rdfs:comment>Command is the command line to execute inside the container, the working
directory for the command is root ('/') in the container's filesystem.
The command is simply exec'd, it is not run inside a shell, so
traditional shell instructions ('|', etc) won't work. To use a shell, you
need to explicitly call out to that shell. Exit status of 0 is treated as
live/healthy and non-zero is unhealthy.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Port number of the gRPC service. Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_service">
    <rdfs:label>service</rdfs:label>
    <rdfs:comment>Service is the name of the service to place in the gRPC
HealthCheckRequest. See
https://github.com/grpc/grpc/blob/master/doc/health-checking.md.

If this is not specified, the default behavior is defined by gRPC.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_host">
    <rdfs:label>host</rdfs:label>
    <rdfs:comment>Host name to connect to, defaults to the model serving container's IP.
You probably want to set "Host" in httpHeaders instead.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_path">
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>Path to access on the HTTP server.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Number of the port to access on the container.
Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_scheme">
    <rdfs:label>scheme</rdfs:label>
    <rdfs:comment>Scheme to use for connecting to the host.
Defaults to HTTP. Acceptable values are "HTTP" or "HTTPS".</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_name">
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>The header field name.
This will be canonicalized upon output, so case-variant names will be
understood as the same header.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_value">
    <rdfs:label>value</rdfs:label>
    <rdfs:comment>The header field value</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_host">
    <rdfs:label>host</rdfs:label>
    <rdfs:comment>Optional: Host name to connect to, defaults to the model serving
container's IP.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Number of the port to access on the container.
Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_failure_threshold">
    <rdfs:label>failure_threshold</rdfs:label>
    <rdfs:comment>Number of consecutive failures before the probe is considered failed.
Defaults to 3. Minimum value is 1.

Maps to Kubernetes probe argument 'failureThreshold'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_initial_delay_seconds">
    <rdfs:label>initial_delay_seconds</rdfs:label>
    <rdfs:comment>Number of seconds to wait before starting the probe. Defaults to 0.
Minimum value is 0.

Maps to Kubernetes probe argument 'initialDelaySeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_period_seconds">
    <rdfs:label>period_seconds</rdfs:label>
    <rdfs:comment>How often (in seconds) to perform the probe. Default to 10 seconds.
Minimum value is 1. Must be less than timeout_seconds.

Maps to Kubernetes probe argument 'periodSeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_success_threshold">
    <rdfs:label>success_threshold</rdfs:label>
    <rdfs:comment>Number of consecutive successes before the probe is considered successful.
Defaults to 1. Minimum value is 1.

Maps to Kubernetes probe argument 'successThreshold'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_timeout_seconds">
    <rdfs:label>timeout_seconds</rdfs:label>
    <rdfs:comment>Number of seconds after which the probe times out. Defaults to 1 second.
Minimum value is 1. Must be greater or equal to period_seconds.

Maps to Kubernetes probe argument 'timeoutSeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_command">
    <rdfs:label>command</rdfs:label>
    <rdfs:comment>Command is the command line to execute inside the container, the working
directory for the command is root ('/') in the container's filesystem.
The command is simply exec'd, it is not run inside a shell, so
traditional shell instructions ('|', etc) won't work. To use a shell, you
need to explicitly call out to that shell. Exit status of 0 is treated as
live/healthy and non-zero is unhealthy.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Port number of the gRPC service. Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_service">
    <rdfs:label>service</rdfs:label>
    <rdfs:comment>Service is the name of the service to place in the gRPC
HealthCheckRequest. See
https://github.com/grpc/grpc/blob/master/doc/health-checking.md.

If this is not specified, the default behavior is defined by gRPC.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_host">
    <rdfs:label>host</rdfs:label>
    <rdfs:comment>Host name to connect to, defaults to the model serving container's IP.
You probably want to set "Host" in httpHeaders instead.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_path">
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>Path to access on the HTTP server.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Number of the port to access on the container.
Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_scheme">
    <rdfs:label>scheme</rdfs:label>
    <rdfs:comment>Scheme to use for connecting to the host.
Defaults to HTTP. Acceptable values are "HTTP" or "HTTPS".</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_name">
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>The header field name.
This will be canonicalized upon output, so case-variant names will be
understood as the same header.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_value">
    <rdfs:label>value</rdfs:label>
    <rdfs:comment>The header field value</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_host">
    <rdfs:label>host</rdfs:label>
    <rdfs:comment>Optional: Host name to connect to, defaults to the model serving
container's IP.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Number of the port to access on the container.
Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_container_port">
    <rdfs:label>container_port</rdfs:label>
    <rdfs:comment>The number of the port to expose on the pod's IP address.
Must be a valid port number, between 1 and 65535 inclusive.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_failure_threshold">
    <rdfs:label>failure_threshold</rdfs:label>
    <rdfs:comment>Number of consecutive failures before the probe is considered failed.
Defaults to 3. Minimum value is 1.

Maps to Kubernetes probe argument 'failureThreshold'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_initial_delay_seconds">
    <rdfs:label>initial_delay_seconds</rdfs:label>
    <rdfs:comment>Number of seconds to wait before starting the probe. Defaults to 0.
Minimum value is 0.

Maps to Kubernetes probe argument 'initialDelaySeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_period_seconds">
    <rdfs:label>period_seconds</rdfs:label>
    <rdfs:comment>How often (in seconds) to perform the probe. Default to 10 seconds.
Minimum value is 1. Must be less than timeout_seconds.

Maps to Kubernetes probe argument 'periodSeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_success_threshold">
    <rdfs:label>success_threshold</rdfs:label>
    <rdfs:comment>Number of consecutive successes before the probe is considered successful.
Defaults to 1. Minimum value is 1.

Maps to Kubernetes probe argument 'successThreshold'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_timeout_seconds">
    <rdfs:label>timeout_seconds</rdfs:label>
    <rdfs:comment>Number of seconds after which the probe times out. Defaults to 1 second.
Minimum value is 1. Must be greater or equal to period_seconds.

Maps to Kubernetes probe argument 'timeoutSeconds'.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_command">
    <rdfs:label>command</rdfs:label>
    <rdfs:comment>Command is the command line to execute inside the container, the working
directory for the command is root ('/') in the container's filesystem.
The command is simply exec'd, it is not run inside a shell, so
traditional shell instructions ('|', etc) won't work. To use a shell, you
need to explicitly call out to that shell. Exit status of 0 is treated as
live/healthy and non-zero is unhealthy.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Port number of the gRPC service. Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_service">
    <rdfs:label>service</rdfs:label>
    <rdfs:comment>Service is the name of the service to place in the gRPC
HealthCheckRequest. See
https://github.com/grpc/grpc/blob/master/doc/health-checking.md.

If this is not specified, the default behavior is defined by gRPC.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_host">
    <rdfs:label>host</rdfs:label>
    <rdfs:comment>Host name to connect to, defaults to the model serving container's IP.
You probably want to set "Host" in httpHeaders instead.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_path">
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>Path to access on the HTTP server.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Number of the port to access on the container.
Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_scheme">
    <rdfs:label>scheme</rdfs:label>
    <rdfs:comment>Scheme to use for connecting to the host.
Defaults to HTTP. Acceptable values are "HTTP" or "HTTPS".</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_name">
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>The header field name.
This will be canonicalized upon output, so case-variant names will be
understood as the same header.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_value">
    <rdfs:label>value</rdfs:label>
    <rdfs:comment>The header field value</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_host">
    <rdfs:label>host</rdfs:label>
    <rdfs:comment>Optional: Host name to connect to, defaults to the model serving
container's IP.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_port">
    <rdfs:label>port</rdfs:label>
    <rdfs:comment>Number of the port to access on the container.
Number must be in the range 1 to 65535.</rdfs:comment>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_create">
    <rdfs:label>create</rdfs:label>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://example.org/onto/prop/google_vertex_ai_endpoint_with_model_garden_deployment_delete">
    <rdfs:label>delete</rdfs:label>
    <rdfs:domain rdf:resource="http://example.org/onto/class/google_vertex_ai_endpoint_with_model_garden_deployment"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:DatatypeProperty>
</rdf:RDF>
